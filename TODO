
API должен быть доступен только аутентифицированным пользователям. Используйте в проекте аутентификацию по токену TokenAuthentication.
Аутентифицированный пользователь авторизован на изменение и удаление своего контента; в остальных случаях доступ предоставляется только для чтения. При попытке изменить чужие данные должен возвращаться код ответа 403 Forbidden.
Для взаимодействия с ресурсами опишите и настройте такие эндпоинты:
api/v1/posts/ (GET, POST): получаем список всех постов или создаём новый пост.
api/v1/posts/{post_id}/ (GET, PUT, PATCH, DELETE): получаем, редактируем или удаляем пост по id.
api/v1/groups/ (GET): получаем список всех групп.
api/v1/groups/{group_id}/ (GET): получаем информацию о группе по id.
api/v1/posts/{post_id}/comments/ (GET, POST): получаем список всех комментариев поста с id=post_id или создаём новый, указав id поста, который хотим прокомментировать.
api/v1/posts/{post_id}/comments/{comment_id}/ (GET, PUT, PATCH, DELETE): получаем, редактируем или удаляем комментарий по id у поста с id=post_id.
В ответ на запросы POST, PUT и PATCH ваш API должен возвращать объект, который был добавлен или изменён.
Обязательное условие: работайте с моделью Post через ModelViewSet.
Если вы решите, что вьюсеты подойдут и для работы с остальными моделями — не стесняйтесь, применяйте их везде, где можно.